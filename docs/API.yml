openapi: 3.0.3
info:
  title: Instant Messaging API
  description: API for managing messaging channels
  version: 1.0.0
  # Ant√≥nio Paulino - 50512
  # Bernardo Pereira - 50493
tags:
  - name: Authentication
  - name: Users
  - name: Channels
  - name: Messaging
  - name: Invitations

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
          format: integer
        username:
          type: string
        email:
          type: string
          format: email
    Channel:
      type: object
      properties:
        channelID:
          type: string
          format: integer
        channelName:
          type: string
        isPublic:
          type: boolean
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Message:
      type: object
      properties:
        messageID:
          type: integer
        senderID:
          type: integer
        channelID:
          type: integer
        content:
          type: string
        timestamp:
          type: string
    ChannelInvitation:
      type: object
      properties:
        inviteID:
          type: string
          format: integer
        channelID:
          type: string
          format: integer
        expirationDate:
          type: string
          format: date-time
        role:
          type: string
          enum: [owner, member, guest]
          description: User role in the channel
        status:
          type: string
          enum: [pending, accepted, declined, expired]
          description: Invitation status
    InstantMessagingInvitation:
      type: object
      properties:
        creatorID:
          type: string
          format: integer
        expirationDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [available, used, expired]
          description: Invitation status
        token:
          type: string
          format: uuid
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
        details:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    http:
      type: http
      scheme: basic

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Unique username for the user
                password:
                  type: string
                  format: password
                  description: Strong password for account security
                email:
                  type: string
                  format: email
                  description: Valid email address
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, possibly due to invalid input or missing fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user and retrieve access tokens
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username or email used for login
                password:
                  type: string
                  format: password
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expiresIn:
                    type: integer
                    description: Access token expiration time in seconds
                  refreshToken:
                    type: string
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout a user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User successfully logged out
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: Refresh the access token
      parameters:
        - name: refreshToken
          in: header
          required: true
          schema:
            type: string
            description: Refresh token issued during login
      responses:
        '200':
          description: New access and refresh tokens issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      expiresIn:
                        type: integer
                        description: Access token expiration time in seconds
                  refreshToken:
                    type: string
        '400':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/invitations:
    post:
      tags:
        - Authentication
      summary: Create an instant messaging invitation
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Invitation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantMessagingInvitation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      tags:
      - Users
      summary: Get a list of all users
      security:
      - bearerAuth: []
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
          description: Filter users by name
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Page number for pagination
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          default: 10
        description: Number of users per page
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
  /users/{userID}:
    get:
      tags:
        - Users
      summary: Get details of a specific user
      security:
        - bearerAuth: []
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{userID}/channels:
    get:
      tags:
        - Users
      summary: Get a list of all channels a user is a member of
      security:
        - bearerAuth: []
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: integer
      responses:
        '200':
          description: List of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /channels:
    post:
      tags:
        - Channels
      summary: Create a new channel
      security:
        - bearerAuth: []
      requestBody:
        description: Details to create a new channel, either public or private
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelName:
                  type: string
                  description: Name of the channel
                isPublic::
                  type: boolean
                  description: Whether this is a public channel
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /channels/{channelID}:
    get:
      tags:
        - Channels
      summary: Get details of a specific channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: User is not a member of the channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Channels
      summary: Update the channel's details # Not required
      security:
        - bearerAuth: []
      requestBody:
        description: New channel details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelName:
                  type: string
                isPublic::
                  type: boolean
      responses:
        '204':
          description: Channel updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, only owner can update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Channels
      summary: Delete a channel # Not required
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, only owner can delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /channels/{channelID}/members/{userID}:
    post:
      tags:
        - Channels
      summary: Join a public channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: User added successfully
        '400':
          description: Channel is private
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Channels
      summary: Leave a channel or kick a member
      security:
        - bearerAuth: []
      parameters:
          - name: channelID
            in: path
            required: true
            schema:
              type: string
          - name: userID
            in: query
            required: true
            schema:
              type: string
      responses:
        '200':
          description: User left successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /channels/{channelID}/messages:
    get:
      tags:
        - Messaging
      summary: Get messages from a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
        - name : page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - name : pageSize
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Number of messages per page
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Messaging
      summary: Send a message to a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '201':
          description: Message sent successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /channels/{channelID}/messages/{messageID}:
    put:
        tags:
          - Messaging
        summary: Edit a message in a channel # Not required
        security:
          - bearerAuth: []
        parameters:
          - name: channelID
            in: path
            required: true
            schema:
              type: string
          - name: messageID
            in: query
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                properties:
                  content:
                    type: string
        responses:
          '200':
            description: Message edited successfully
          '400':
            description: Bad request
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '403':
            description: Forbidden, user does not own the message
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Channel or message not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Messaging
      summary: Delete a message from a channel # Not required
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
        - name: messageID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have permission to delete the message
        '404':
          description: Channel or message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /channels/{channelID}/invitations:
    post:
      tags:
        - Invitations
      summary: Create a channel invitation
      security:
        - bearerAuth: []
      requestBody:
        description: Details to create a channel invitation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userID:
                  type: string
                  format: integer
                  description: User to invite
                expirationDate:
                  type: string
                  format: date-time
                  description: Date and time when the invitation expires
                role:
                  type: string
                  enum: [owner, member, guest]
                  description: User role in the group channel
      responses:
        '201':
          description: Invitation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelInvitation'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have permission to create an invitation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Invitations
      summary: Get a list of all channel invitations for a channel # Not required
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
            format: integer
      responses:
        '200':
          description: List of channel invitations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelInvitation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /channels/{channelID}/invitations/{inviteID}:
    patch:
      tags:
        - Invitations
      summary: Update invite permissions and expiration date # Not required
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
            format: integer
        - name: inviteID
          in: path
          required: true
          schema:
            type: string
            format: integer
      requestBody:
        description: Invitation status
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expirationDate:
                  type: string
                  format: date-time
                role:
                  type: string
                  enum: [owner, member, guest]
      responses:
        '204':
          description: Invitation status updated successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel or invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Invitations
      summary: Delete a channel invitation # Not required
      security:
        - bearerAuth: []
      parameters:
        - name: channelID
          in: path
          required: true
          schema:
            type: string
            format: integer
        - name: inviteID
          in: path
          required: true
          schema:
            type: string
            format: integer
      responses:
        '200':
          description: Invitation deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have permission to delete the invitation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Channel or invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                /users/{userID}/channelInvitations:
    get:
      tags:
        - Invitations
      summary: Get a list of all channel invitations for a user
      security:
        - bearerAuth: []
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: integer
      responses:
        '200':
          description: List of channel invitations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelInvitation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{userID}/channelInvitations:/{inviteID}:
    patch:
      tags:
        - Invitations
      summary: Accept or decline a channel invitation
      security:
        - bearerAuth: []
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: integer
        - name: inviteID
          in: path
          required: true
          schema:
            type: string
            format: integer
      requestBody:
        description: Invitation status
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [accept, decline]
      responses:
        '204':
          description: Invitation status updated successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden, user does not have access to this invitation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User or invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    